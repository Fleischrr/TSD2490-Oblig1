@page "/"
@using System.Timers

<style>
    .container {
        width: 400px;
    }

    button {
        width: 100px;
        height: 100px;
        font-size: 50px;
    }
</style>

<div class="container">
    <div class="row">
        @for (var emojiNumber = 0; emojiNumber < shuffeldEmoji.Count; emojiNumber++)
        {
            var emoji = shuffeldEmoji[emojiNumber];
            var uniqueDescription = $"Button #{emojiNumber}";

            <div class="col-3">
                <button @onclick="@(() => ButtonClick(emoji, uniqueDescription))" 
                    type="button" class="btn btn-outline-dark">
                    <h1>@emoji</h1>
                </button>
            </div>
        }
    </div>
    <div>
        <h2>Matches found: @matchesFound</h2>
    </div>
    <div>
        <h2>Time: @timeDisplay</h2>
    </div>
</div>


@code {
    //liste av dyr-emojies
    List<string> animalEmoji = new List<string>()
{
        "🐶","🐶",
        "🐺","🐺",
        "🐮","🐮",
        "🦊","🦊",
        "🐱","🐱",
        "🦁","🦁",
        "🐯","🐯",
        "🐹","🐹"
    };

    //liste av ball-emojies
    List<string> ballEmoji = new List<string>()
    {
        "⚽","⚽",
        "⚾","⚾",
        "🥎","🥎",
        "🏀","🏀",
        "🏐","🏐",
        "🏈","🏈",
        "🏉","🏉",
        "🎱","🎱"
    };

    //liste av klokke-emojies
    List<string> clockEmoji = new List<string>()
    {
        "🕛","🕛",
        "🕒","🕒",
        "🕕","🕕",
        "🕘","🕘",
        "🕜","🕜",
        "🕟","🕟",
        "🕢","🕢",
        "🕦","🕦"
    };

    List<string> shuffeldEmoji = new List<string>();
    int matchesFound = 0;

    Timer timer;
    int tenthsOfSecondsElapsed = 0;
    string timeDisplay;

    /* På oppstart */
    protected override void OnInitialized()
    {
        timer = new Timer(100);
        timer.Elapsed += Timer_Tick;

        setUpGame();
    }

    /* Oppsett funksjon */
    private void setUpGame()
    {
        Random random = new Random();
        List<string> chosenEmojiTheme;
        int randInt = random.Next(3);   //tilfelldig tall mellom 0 og 2

        if (0 == randInt)
        {
            chosenEmojiTheme = animalEmoji;
        } 
        else if (1 == randInt)
        {
            chosenEmojiTheme = ballEmoji;
        }
        else
        {
            chosenEmojiTheme = clockEmoji;
        }

        shuffeldEmoji = chosenEmojiTheme.OrderBy(item => random.Next()).ToList();

        matchesFound = 0;
        tenthsOfSecondsElapsed = 0;
    }

    string lastEmojiFound = string.Empty;
    string lastDescription = string.Empty;

    /* Hva å gjøre ved muse-klikk */
    private void ButtonClick(string emoji, string emojiDescription)
    {
        if (lastEmojiFound == string.Empty)
        {
            //første museklikk. Lagre valg.
            lastEmojiFound = emoji;
            lastDescription = emojiDescription;

            //start timer ved første klikk
            timer.Start();
        }
        else if ((lastEmojiFound == emoji) && (emojiDescription != lastDescription))
        {
            //to like funnet. Reset valg til neste
            lastEmojiFound = string.Empty;

            //bytte ut funnet dyr men tom string for å skjule
            shuffeldEmoji = shuffeldEmoji.Select(a => a.Replace(emoji, string.Empty)).ToList();

            matchesFound++;

            if (matchesFound == 8)
            {
                timer.Stop();
                timeDisplay += " - Play Again?";

                setUpGame();
            }
        }
        else
        {
            //valg av ulike par. Reset valg til neste
            lastEmojiFound = string.Empty;
        }
    }

    /* Timer init */
    private void Timer_Tick(object source, ElapsedEventArgs e)
    {
        InvokeAsync(() =>
        {
            tenthsOfSecondsElapsed++;
            timeDisplay = (tenthsOfSecondsElapsed / 10F).ToString("0.0s");
            StateHasChanged();
        });

    }
}
