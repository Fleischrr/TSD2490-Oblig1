@page "/"
@using System.Timers

<style>
    .container {
        width: 400px;
    }

    button {
        width: 100px;
        height: 100px;
        font-size: 50px;
    }
</style>

<div class="container">
    <div class="row">
        @for (var animalNumber = 0; animalNumber < shuffeldAnimals.Count; animalNumber++)
        {
            var animal = shuffeldAnimals[animalNumber];
            var uniqueDescription = $"Button #{animalNumber}";

            <div class="col-3">
                <button @onclick="@(() => ButtonClick(animal, uniqueDescription))" 
                    type="button" class="btn btn-outline-dark">
                    <h1>@animal</h1>
                </button>
            </div>
        }
    </div>
    <div>
        <h2>Matches found: @matchesFound</h2>
    </div>
    <div>
        <h2>Time: @timeDisplay</h2>
    </div>
</div>

@code {
    List<string> animalEmoji = new List<string>()
{
        "🐶","🐶",
        "🐺","🐺",
        "🐮","🐮",
        "🦊","🦊",
        "🐱","🐱",
        "🦁","🦁",
        "🐯","🐯",
        "🐹","🐹"
    };

    List<string> shuffeldAnimals = new List<string>();
    int matchesFound = 0;
    Timer timer;
    int tenthsOfSecondsElapsed = 0;
    string timeDisplay;

    protected override void OnInitialized()
    {
        timer = new Timer(100);
        timer.Elapsed += Timer_Tick;

        setUpGame();
    }

    private void setUpGame()
    {
        Random random = new Random();
        shuffeldAnimals = animalEmoji.OrderBy(item => random.Next()).ToList();

        matchesFound = 0;
        tenthsOfSecondsElapsed = 0;
    }

    string lastAnimalFound = string.Empty;
    string lastDescription = string.Empty;

    private void ButtonClick(string animal, string animalDescription)
    {
        if (lastAnimalFound == string.Empty)
        {
            //første museklikk. Lagre valg.
            lastAnimalFound = animal;
            lastDescription = animalDescription;

            //start timer ved første klikk
            timer.Start();
        }
        else if ((lastAnimalFound == animal) && (animalDescription != lastDescription))
        {
            //to like funnet. Reset valg til neste
            lastAnimalFound = string.Empty;

            //bytte ut funnet dyr men tom string for å skjule
            shuffeldAnimals = shuffeldAnimals.Select(a => a.Replace(animal, string.Empty)).ToList();

            matchesFound++;

            if (matchesFound == 8)
            {
                timer.Stop();
                timeDisplay += " - Play Again?";

                setUpGame();
            }

        }
        else
        {
            //valg av ulike par. Reset valg til neste
            lastAnimalFound = string.Empty;
        }
    }

    private void Timer_Tick(object source, ElapsedEventArgs e)
    {
        InvokeAsync(() =>
        {
            tenthsOfSecondsElapsed++;
            timeDisplay = (tenthsOfSecondsElapsed / 10F).ToString("0.0s");
            StateHasChanged();
        });

    }
}
